{"version":3,"sources":["components/Notification/Notification.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","style","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","data-feedback","type","btn","onClick","Statistics","good","neutral","bad","total","positivePercentage","styles","item","Notification","message","App","state","feedbackCalc","target","setState","prevState","dataset","feedback","this","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,QAAU,gC,kBCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,4JCeVC,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,oBAAIC,UAAWC,IAAMH,MAArB,SAA6BA,IAC5BC,M,wBCkBUG,EArBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,mCACG,YAAIC,OAAOC,KAAKH,IAAUI,KAAI,SAAAC,GAAM,OACnC,wBAEEC,gBAAeD,EACfE,KAAK,SACLV,UAAWC,IAAMU,IACjBC,QAASR,EALX,SAOGI,GANIA,S,gBCcEK,EAlBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,+BACE,qBAAIlB,UAAWmB,IAAOC,KAAtB,mBAAmCN,KACnC,qBAAId,UAAWmB,IAAOC,KAAtB,sBAAsCL,KACtC,qBAAIf,UAAWmB,IAAOC,KAAtB,kBAAkCJ,KAClC,qBAAIhB,UAAWmB,IAAOC,KAAtB,oBAAoCH,KACpC,qBAAIjB,UAAWmB,IAAOC,KAAtB,gCAAgDF,EAAhD,W,iBCEWG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGtB,UAAWC,IAAMqB,QAApB,SAA8BA,KCoDjBC,E,4MAlDbC,MAAQ,CACNV,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPS,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OAChB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOG,QAAQC,SAAWF,EAAUF,EAAOG,QAAQC,UAAY,O,wDAIpE,WACE,OAAOC,KAAKP,MAAMV,KAAOiB,KAAKP,MAAMT,QAAUgB,KAAKP,MAAMR,M,6CAG3D,WACE,OAAqC,IAA9Be,KAAKC,qBACR,EACAC,KAAKC,MAAOH,KAAKP,MAAMV,KAAOiB,KAAKC,qBAAwB,O,oBAGjE,WACE,OACE,qCACE,cAAC,EAAD,CAASlC,MAAM,wBAAf,SACE,cAAC,EAAD,CACEK,QAAS4B,KAAKP,MACdpB,gBAAiB2B,KAAKN,iBAI1B,cAAC,EAAD,CAAS3B,MAAM,aAAf,SACiC,IAA9BiC,KAAKC,qBACJ,cAAC,EAAD,CAAcV,QAAQ,sBAEtB,cAAC,EAAD,CACER,KAAMiB,KAAKP,MAAMV,KACjBC,QAASgB,KAAKP,MAAMT,QACpBC,IAAKe,KAAKP,MAAMR,IAChBC,MAAOc,KAAKC,qBACZd,mBAAoBa,KAAKI,6C,GA1CrBC,a,YCAlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1B9C,EAAOC,QAAU,CAAC,MAAQ,yB,kBCA1BD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.6348d2e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Statistics_item__1vE2T\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className={style.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.element.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <>\n    {[...Object.keys(options)].map(option => (\n      <button\n        key={option}\n        data-feedback={option}\n        type=\"button\"\n        className={style.btn}\n        onClick={onLeaveFeedback}\n      >\n        {option}\n      </button>\n    ))}\n  </>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.objectOf(PropTypes.number.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul>\n    <li className={styles.item}>Good: {good}</li>\n    <li className={styles.item}>Neutral: {neutral}</li>\n    <li className={styles.item}>Bad: {bad}</li>\n    <li className={styles.item}>Total: {total}</li>\n    <li className={styles.item}>Positive feedback: {positivePercentage}%</li>\n  </ul>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={style.message}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  feedbackCalc = ({ target }) => {\n    this.setState(prevState => ({\n      [target.dataset.feedback]: prevState[target.dataset.feedback] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return this.state.good + this.state.neutral + this.state.bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    return this.countTotalFeedback() === 0\n      ? 0\n      : Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.feedbackCalc}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './style.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1rp9P\"};"],"sourceRoot":""}